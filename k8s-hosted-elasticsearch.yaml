---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: javaee-cafe-aad-postgres-hosted-elasticsearch
  namespace: open-liberty-demo
  labels:
    app: open-liberty-demo
spec:
  selector:
    matchLabels:
      app: open-liberty-demo
  template:
    metadata:
      labels:
        app: open-liberty-demo
    spec:
      containers:
      - name: javaee-cafe-aad-postgres-hosted-elasticsearch
        # NOTE:
        # - replace "${CONTAINER_REGISTRY}" with your valid container registry name
        # - use format "docker.io/${Your_DockerHub_Account}" if Docker Hub is used as your container repositories
        image: ${CONTAINER_REGISTRY}/open-liberty-demo:1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 9080
        - name: https
          containerPort: 9443
        env:
        - name: CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: aad-oidc-secret
              key: client.id
        - name: CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: aad-oidc-secret
              key: client.secret
        - name: TENANT_ID
          valueFrom:
            secretKeyRef:
              name: aad-oidc-secret
              key: tenant.id
        - name: ADMIN_GROUP_ID
          valueFrom:
            secretKeyRef:
              name: aad-oidc-secret
              key: admin.group.id  
        - name: DB_SERVER_NAME
          valueFrom:
            secretKeyRef:
              name: db-secret-postgres
              key: db.server.name
        - name: DB_PORT_NUMBER
          valueFrom:
            secretKeyRef:
              name: db-secret-postgres
              key: db.port.number
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: db-secret-postgres
              key: db.name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-secret-postgres
              key: db.user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret-postgres
              key: db.password
        - name: WLP_LOGGING_MESSAGE_FORMAT
          value: JSON
        - name: WLP_LOGGING_MESSAGE_SOURCE
          value: message,trace,accessLog,ffdc,audit
        volumeMounts:
          - name: logs-volume
            mountPath: /logs
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 500Mi
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:7.6.2
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        securityContext:
          runAsUser: 0
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: ELASTIC_CLOUD_ID
          valueFrom:
            secretKeyRef:
              name: elastic-cloud-secret
              key: elastic.cloud.id
        - name: ELASTIC_CLOUD_AUTH
          valueFrom:
            secretKeyRef:
              name: elastic-cloud-secret
              key: elastic.cloud.auth
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: logs-volume
          mountPath: /logs
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: filebeat-config
      - name: logs-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: javaee-cafe-aad-postgres-hosted-elasticsearch
  namespace: open-liberty-demo
spec:
  type: LoadBalancer
  selector:
    app: open-liberty-demo
  ports:
  - name: http
    protocol: TCP
    port: 9080
    targetPort: http
  - name: https
    protocol: TCP
    port: 9443
    targetPort: https
